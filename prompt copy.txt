üß† CONTEXTO GENERAL  
Stack tecnol√≥gico:
- Node.js + TypeScript + Express + Prisma  
- PostgreSQL  
- API oficial de WhatsApp Business  
- AWS (EC2, S3, RDS u otros seg√∫n necesidad)

üì¶ Base de datos multiempresa (multi-tenant):  
- Cada nueva empresa genera tablas dedicadas.  
- Puede usarse un esquema distinto (ej. `company_abc.Customers`) o prefijos (`abc_Customers`).

üîë Tablas principales por empresa:
- Customers  
- Customer_Addresses  
- Products  
- Orders  
- Order_Status  
- Order_History  
- Customer_Sessions  
*(M√°s tablas seg√∫n el negocio)*

üõ† Backend:
- Express en TypeScript  
- Integrado con WhatsApp Business API  
- Clean Architecture + SOLID + separaci√≥n en capas (Controllers, Services, Repositories)  
- Mensajes al usuario final en espa√±ol  
- C√≥digo y docs internas en ingl√©s

‚úÖ Validaciones al iniciar:
- Variables de entorno (.env)  
- Conexi√≥n a PostgreSQL  
- Conexi√≥n a API de WhatsApp  
- Conexi√≥n a servicios AWS  
- Webhook y logs configurados

üéØ OBJETIVO FINAL  
Plataforma backend multiempresa para atenci√≥n autom√°tica por WhatsApp, enfocada en:
- Tiendas de abarrotes  
- Verduler√≠as  
- Empresas de agua a domicilio  
- Tintorer√≠as  
- Comercios locales

üí≥ Planes de suscripci√≥n:
- B√°sico  
- Completo  
- Premium  
*(Limitaciones por plan: volumen de mensajes, productos activos, funcionalidades)*

üîó Webhook √∫nico y din√°mico:
- Un endpoint: `/webhook`  
- Identificaci√≥n por `phone_number_id` extra√≠do del body

üìö MODELO DE BASE DE DATOS
- basado en los archivos dentro del directorio prisma/central/schema.prisma y prisma/tenant/schema.prisma

ü§ñ FLUJO DEL BOT AUTOM√ÅTICO

üü¢ Webhook escucha (POST /webhook):
1. Si n√∫mero nuevo ‚Üí crear cliente en `Customers`  
2. Si ya existe ‚Üí ir al men√∫ principal

üìã Men√∫ principal:
- Ver cat√°logo  
- Hacer un pedido  
- Estado de pedido  
- Hablar con un asesor

üß≠ Flujos:
- Cat√°logo ‚Üí Listar productos activos  
- Pedido ‚Üí Recolectar datos, confirmar y registrar en `Orders`  
- Estado ‚Üí Buscar √∫ltimo pedido y mostrar estado  
- Asesor ‚Üí Derivar a un humano

üì¶ Confirmaci√≥n de pedido:
- Crear en `Orders`, enviar resumen, estado inicial  
- Notificar al administrador si se desea

üïí Manejo de sesi√≥n:
- Usar `Customer_Sessions` para persistencia y reanudaci√≥n de flujo

üõë RECOMENDACIONES ADICIONALES
- Buen manejo de errores ‚Üí mensajes claros y opciones  
- Middleware para logs y trazabilidad  
- Alertas autom√°ticas para monitoreo de fallos (API, pedidos)

Estructura de proyecto
mi-proyecto-chatbot/
‚îÇ
‚îú‚îÄ‚îÄ src/                    # C√≥digo fuente
‚îÇ   ‚îú‚îÄ‚îÄ controllers/         # L√≥gica de los endpoints
‚îÇ   ‚îú‚îÄ‚îÄ services/            # L√≥gica de negocio
‚îÇ   ‚îú‚îÄ‚îÄ database/            # L√≥gica de creacion de tenants bases de datos
‚îÇ   ‚îú‚îÄ‚îÄ repositories/        # Interacci√≥n con la base de datos
‚îÇ   ‚îú‚îÄ‚îÄ models/              # Modelos de datos (tipos de base de datos, entidades)
‚îÇ   ‚îú‚îÄ‚îÄ middlewares/         # Middleware (logging, validaciones, etc.)
‚îÇ   ‚îú‚îÄ‚îÄ routes/              # Definici√≥n de rutas
‚îÇ   ‚îú‚îÄ‚îÄ utils/               # Utilidades auxiliares
‚îÇ   ‚îî‚îÄ‚îÄ app.ts               # Configuraci√≥n principal de Express
‚îÇ
‚îú‚îÄ‚îÄ .env                    # Variables de entorno
‚îú‚îÄ‚îÄ tsconfig.json            # Configuraci√≥n de TypeScript
‚îú‚îÄ‚îÄ package.json             # Configuraci√≥n de NPM
‚îî‚îÄ‚îÄ nodemon.json             # Configuraci√≥n de Nodemon













////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

üß≠ Pr√≥ximo paso: Implementar el flujo de atenci√≥n automatizada
Con la infraestructura base ya establecida, es momento de desarrollar la l√≥gica que gestionar√° las conversaciones con los clientes. Esto incluye la creaci√≥n de sesiones, la gesti√≥n de men√∫s y submen√∫s, y la persistencia de datos relevantes para cada interacci√≥n.

üß© Estructura sugerida para el flujo de atenci√≥n
Recepci√≥n de mensajes entrantes:

El webhook debe capturar los mensajes entrantes de WhatsApp y extraer informaci√≥n clave como el n√∫mero de tel√©fono, el mensaje y el phone_number_id.

Gesti√≥n de sesiones:

Implementar una l√≥gica que verifique si existe una sesi√≥n activa para el cliente.

Si no existe, crear una nueva entrada en la tabla Customer_Sessions correspondiente al tenant.

Men√∫ principal y navegaci√≥n:

Desarrollar un men√∫ principal que ofrezca opciones como:

Ver cat√°logo

Realizar un pedido

Consultar estado de pedido

Hablar con un asesor

Cada opci√≥n debe dirigir al cliente a un submen√∫ o flujo espec√≠fico.

Persistencia y seguimiento:

Registrar cada interacci√≥n en las tablas correspondientes (Orders, Order_History, etc.) para mantener un historial completo de las actividades del cliente.

Manejo de errores y validaciones:

Implementar validaciones para entradas del usuario y manejar errores de forma que se brinden respuestas claras y √∫tiles al cliente.

üß™ Pruebas y validaci√≥n
Para asegurar que el flujo funciona correctamente:

Utiliza herramientas como Postman para simular mensajes entrantes y verificar las respuestas del sistema.

Realiza pruebas con diferentes escenarios, incluyendo entradas v√°lidas e inv√°lidas, para evaluar la robustez del flujo.

Monitorea los logs para identificar y corregir posibles errores o comportamientos inesperados.

Analiza todo el codigo y directorios de este repositorio en la rama master https://github.com/mariots182/chat-central 

